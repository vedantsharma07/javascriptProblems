//Problem: Run all these promises in sequence.

//Helper function which creates and returns a Promise after certain time.
const asyncTask = (time) => {
  return new Promise((resolve, reject) => {
    setTimeout(() => resolve(`Completing ${time}`, 1000*time))
  });
}

//create an array of task
const promises = [
  asyncTask(3),
  asyncTask(1),
  asyncTask(7),
  asyncTask(2),
  asyncTask(5)
];

const asyncSeriesExecuter = (promises) => {
  promises.reduce((prev, curr) => {
    return prev.then(() => {
      return curr.then(val => console.log(val));
    })
  }, Promise.resolve());
}

asyncSeriesExecuter(promises);
